{
  "hash": "b74bda8f836eb4f13b6da184106b3bb2",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Geospatial Analysis of Fulton County Tax Appeal Filings from 2011 to 2022\"\nauthor:\n  - name: Nicholas Polimeni\n    affiliation: \n      - name: Urban Research Group, Georgia Institute of Technology\n        city: Atlanta\n        state: GA\ndate: \"2024-01-22\"\ncategories: [code, analysis]\nformat:\n    html:\n        self-contained: true\n        toc: true\n    pdf: default\nexecute: \n    echo: fenced\n---\n\n## Introduction\n\n### Abstract\nGeorgia's property tax appeal process favors the appeal filer rather than the county; appeal filers can choose to pay 80% of their taxes in a year which they file an appeal, placing the burden of proof on the county. Whether the tax bill remains the same or is reduced after the appeal, the property's tax assessment will be frozen for the next two successive years (cite).\n\nThese features make the appeals process an opportune target for exploitation by high value properties. In particular, serial appealers are a serious concern that may reduce the county's ability to fairly respond to other appealers. Presumably, serial appealers are owners of high value properties who can afford the time or expense of the appeals process.\n\nThis article illustrates the geospatial concentration of appeal filers in Fulton County, the seat of the Atlanta metropolitan statistical area. Serial appealers tend to concentrate in North Atlanta, where property values are higher than the regional average.\n\n### Source Code\nView the full source code [here](https://github.com/Nicholas-Polimeni/fulton-appeals-vis).\n\n## Methods\n\n### Data Sources\n\n### Procedure\n\n## Findings\n\n::: {.cell execution_count=1}\n```` { .cell-code}\n```{{python}}\nfrom IPython.display import IFrame\n\nIFrame(\n    src=r\"C:\\Users\\Nick\\Documents\\code\\portfolio\\posts\\fulton-appeals\\num_appeals.html\",\n    width=1200,\n    height=600,\n)\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n<IPython.lib.display.IFrame at 0x279d6795760>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files\\figure-pdf"
    ],
    "filters": []
  }
}